[keygen]
spawn = pty
exe = ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa
if_not = ls ~/.ssh/id_rsa.pub

[update-remote-key]
exe = ssh-keygen -R $IP

[authorized]
spawn = pty
exe = ssh $SSH_USER@$IP 'bash -s' -- < $SCRIPT/sshd-allow-pubkey.sh "'$PUBKEY'"
if_not = $SSH 'whoami'
dep[] = ssh:update-remote-key

[re-authorized]
spawn = pty
exe = ssh -p $SSH_PORT $SSH_USER@$IP 'bash -s' -- < $SCRIPT/sshd-allow-pubkey.sh "'$PUBKEY'"
if_not = $SSH 'whoami'
dep[] = ssh:update-remote-key

[allow-master]
exe = $SSH 'bash -s' -- < $SCRIPT/sshd-allow-pubkey.sh "'$($SSH_TO root@$MASTER 'cat ~/.ssh/id_rsa.pub')'"
if = [ ! $RANK -eq 0 ]
dep[] = ssh:ready

[remember-slaves]
exe = $SCRIPT/foreach-peer.sh "$SLAVES" $SCRIPT/ssh-remember.sh $SSH_PORT
if = [ $RANK -eq 0 ]

[master-slave]
exe = $SSH 'systemctl restart sshd'
if = [ ! $RANK -eq 0 ]
dep[] = ssh:remember-slaves
dep[] = ssh:allow-master

[agent-refresh]
spawn = pty
exe = $SCRIPT/ssh-agent-refresh.sh
if_not = kill -0 $(cat ~/.ssh/ssh-agent.sh | grep -o -P '(?<=PID=)[0-9]*')
dep[] = ssh:keygen

[trusted]
dep[] = ssh:agent-refresh
dep[] = ssh:authorized

[ssh-port-changed]
exe = $SCRIPT/sshd-change-port.sh $SSH_OLD_PORT
if_not = $SSH 'whoami'
dep[] = ssh:trusted

[ready]
exe = $SSH 'uname' 
dep[] = ssh:ssh-port-changed

[remote-keygen]
exe = $SSH "ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ''"
if_not = $SSH 'test -e ~/.ssh/id_rsa.pub'
dep[] = ssh:ready

[show-remote-pubkey]
exe = $SSH 'cat ~/.ssh/id_rsa.pub'
dep[] = ssh:remote-keygen

[github-keyscan]
exe = $SSH 'ssh-keyscan github.com > github.pub && cat github.pub > ~/.ssh/known_hosts'
dep[] = ssh:ready
