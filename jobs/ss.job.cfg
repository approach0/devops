[base]
exe = $SSH 'apt install -y gettext autoconf libtool libpcre3-dev asciidoc xmlto libev-dev libc-ares-dev automake libmbedtls-dev libsodium-dev'
dep[] = base-software:installed

[config]
exe = $SSH "echo '$(cat $CONFIG/ss.json)' | sed 's/{ip}/$IP/g' > ss.json"
dep[] = ss:base

[simple-obfs-code]
exe = $SSH 'bash -s' -- < $SCRIPT/git-mirror.sh 'https://github.com/t-k-/simple-obfs.git' simple-obfs
dep[] = ss:base

[simple-obfs-installed]
exe = $SSH 'bash -s' -- < $SCRIPT/ss-install-simple-obfs.sh simple-obfs
if_not = $SSH 'which obfs-server'
dep[] = ss:simple-obfs-code

[ss-code]
exe = $SSH 'bash -s' -- < $SCRIPT/git-mirror.sh 'https://github.com/t-k-/shadowsocks-libev.git' ss
dep[] = ss:base

[ss-installed]
exe = $SSH 'bash -s' -- < $SCRIPT/ss-install.sh ss
if_not = $SSH 'which ss-server'
dep[] = ss:ss-code

[httpd-change-port]
exe = $SSH 'bash -s' -- < $SCRIPT/nginx-change-port.sh
dep[] = httpd:config

[serve]
# use ss-local -c ss.json at client, but replace obfs-server to obfs-client.
exe = $SSH "tmux new -d -s 'ss' '/usr/local/bin/ss-server -c ss.json'"
dep[] = ss:config
dep[] = ss:ss-installed
dep[] = ss:simple-obfs-installed
dep[] = ss:httpd-change-port
